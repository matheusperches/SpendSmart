@using Azure.Core

@{
	ViewData["Title"] = "Expenses";
}

@model List<SpendSmart.Models.Expense>

<div class="text-center">
	<h1 class="display-4">Expenses</h1>
	<br />
	<hr />
	<h3>
		@if (Model != null && Model.Any())
		{
			@($"Total Expenses: ${Model.Sum(exp => exp.Value)}")
		}
		else
		{
			@("No expenses to display yet.")
		}
	</h3>
	<br />

	<div class="container">
		<div class="table-wrapper">
			<div class="table-title">
			</div>
			<table class="table table-bordered">
				<thead>
					<tr>
						<th>Value</th>
						<th>Description</th>
						<th>Actions</th>
					</tr>
				</thead>
				<tbody>
					@if (Model != null)
					{
						@foreach (var expense in Model)
						{
							<tr id="expenseRow-@expense.Id" class="view-mode">
								<!-- View Mode Row -->
								<td>@expense.Value</td>
								<td>@expense.Description</td>
								<td>
									<button type="button"
											class="btn btn-outline-info edit-btn"
											data-expense-id="@expense.Id">
										Edit
									</button>
									<form asp-controller="Home" asp-action="DeleteExpense" method="post" class="d-inline">
										<input type="hidden" name="id" value="@expense.Id" />
										<button type="submit" class="btn btn-outline-danger">Delete</button>
									</form>
								</td>
							</tr>
							<tr id="editRow-@expense.Id" class="edit-mode d-none">
								<!-- Edit Mode Row -->
								<form asp-controller="Home" asp-action="UpdateExpense"
									  method="post"
									  asp-route-codeValue="@Context.Request.Query["codeValue"]">
								<td>
									<input type="number"
										   name="Value"
										   class="form-control"
										   value="@expense.Value"
										   step="0.01"
										   required />
								</td>
								<td>
									<input type="text"
										   name="Description"
										   class="form-control"
										   value="@expense.Description"
										   maxlength="100"
										   required />
								</td>
								<td>
									<input type="hidden" name="id" value="@expense.Id" />
									<button type="submit" class="btn btn-primary">Save</button>
									<button type="button" class="btn btn-secondary cancel-edit-btn">Cancel</button>
								</td>
								</form>
							</tr>
						}
					}


					<tr>
						<form asp-controller="Home" asp-action="CreateExpense" method="post" asp-route-codeValue="@Context.Request.Query["codeValue"]">
						<td>
							<input type="number"
								   name="value"
								   class="form-control"
								   placeholder="Enter value"
								   step="0.01"
								   required />
						</td>
						<td>
							<input type="text"
								   name="Description"
								   class="form-control"
								   placeholder="Enter description"
								   maxlength="100"
								   required />
						</td>
						<td>
							<button type="submit" class="btn btn-primary">Add</button>
						</td>
						</form>
					</tr>
				</tbody>
			</table>
			@if (TempData["ErrorMessage"] != null)
			{
				<div class="mt-3">
					<p class="alert alert-danger">@TempData["ErrorMessage"]</p>
				</div>
			}
		</div>
	</div>
</div>

<script>
			document.querySelectorAll('.edit-btn').forEach(button => {
		button.addEventListener('click', function () {
			const expenseId = this.dataset.expenseId;

			// Toggle view and edit rows
			document.getElementById(`expenseRow-${expenseId}`).classList.add('d-none');
			document.getElementById(`editRow-${expenseId}`).classList.remove('d-none');
		});
	});

	document.querySelectorAll('.cancel-edit-btn').forEach(button => {
		button.addEventListener('click', function () {
			const row = this.closest('tr.edit-mode');
			const expenseId = row.id.replace('editRow-', '');

			// Toggle back to view row
			row.classList.add('d-none');
			document.getElementById(`expenseRow-${expenseId}`).classList.remove('d-none');
		});
	});

</script>